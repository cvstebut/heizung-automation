sensor:
  - platform: homeassistant
    id: sensor_az_1
    name: "Arbeitszimmer Temperatur - Fenster"
    entity_id: sensor.thb1_59e2_temperature

  - platform: homeassistant
    id: sensor_az_2
    name: "Arbeitszimmer Temperatur - Schlaftür"
    entity_id: sensor.thb1_bb17_temperature

  - platform: template
    name: "Arbeitszimmer Temperatur - gemittelt"
    id: sensor_az
    update_interval: 10s

    lambda: |-
        return (id(sensor_az_1).state * 30.0 + id(sensor_az_2).state * 70.0)/100.0;
  - platform: pid
    name: "Arbeitszimmer - PID KP"
    type: KP
    climate_id: climate_pid_az
  - platform: pid
    name: "Arbeitszimmer - PID KI"
    type: KI
    climate_id: climate_pid_az
  - platform: pid
    name: "Arbeitszimmer - PID KD"
    type: KD
    climate_id: climate_pid_az
  - platform: pid
    name: "Arbeitszimmer - PID HEAT"
    type: HEAT
    climate_id: climate_pid_az

climate:
  - platform: pid
    id: climate_pid_az
    name: "Arbeitszimmer Climate PID"
    sensor: sensor_az
    heat_output: output_az
    default_target_temperature: 21°C
    control_parameters:
      kp: 0.572961
      ki: 0.00002
      kd: 0.0

output:
  - platform: template
    id: output_az
    type: float
    write_action:
      - if:
          condition:
            lambda: return ((state == 0.0));
          then:
            - logger.log: "---  ZERO   --- output_az: write_action triggered with state == 0.0"
          else:
            - logger.log: "-- NON-ZERO --- output_az: write_action triggered with state <> 0"
      - delay: !lambda "return 1 * 0 / 7 * 60 * 1000;"
      - logger.log: "---  After DELAY  --- setting slow_pwm_az_1 with state using lambda"
      - output.set_level:
          id: slow_pwm_az_1
          level: !lambda return state;
      - if:
          condition:
            lambda: return ((state == 0.0));
          then:
            - logger.log: "---  ZERO   --- output_az: write_action triggered with state == 0.0"
          else:
            - logger.log: "-- NON-ZERO --- output_az: write_action triggered with state <> 0"
      - delay: !lambda "return 1 * 1 / 7 * 60 * 1000;"
      - logger.log: "---  After DELAY  --- setting slow_pwm_az_2 with state using lambda"
      - output.set_level:
          id: slow_pwm_az_2
          level: !lambda return state;

  - platform: slow_pwm
    id: slow_pwm_az_1
    pin:
      number: 18
      inverted: false
      mode:
        output: true
        pulldown: True
    period:
      minutes: 1
    restart_cycle_on_state_change: false
    state_change_action:
        - logger.log: "---  SLOWPWM StateChange --- slow_pwm_az_1 state changed"
    turn_on_action:
      then:
        - lambda: |-
            id(stellventil_display_1).publish_state(true);
    turn_off_action:
      then:
        - lambda: |-
            id(stellventil_display_1).publish_state(false);

  - platform: slow_pwm
    id: slow_pwm_az_2
    pin:
      number: 13
      inverted: false
      mode:
        output: true
        pulldown: True
    period:
      minutes: 1
    restart_cycle_on_state_change: false
    state_change_action:
        - logger.log: "---  SLOWPWM StateChange --- slow_pwm_az_2 state changed"
    turn_on_action:
      then:
        - lambda: |-
            id(stellventil_display_2).publish_state(true);
    turn_off_action:
      then:
        - lambda: |-
            id(stellventil_display_2).publish_state(false);


# sensors enabling display of output state in HA
binary_sensor:
  - platform: template
    id: stellventil_display_1
    name: "Stellventil - Oben - 1 - AZ Fenster"

  - platform: template
    id: stellventil_display_2
    name: "Stellventil - Oben - 2 - AZ Raum"

